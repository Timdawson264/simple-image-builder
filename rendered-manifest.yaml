apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: simple-image-builder-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: imagebuilds.build.k8s.tdawson.co.nz
spec:
  group: build.k8s.tdawson.co.nz
  names:
    kind: ImageBuild
    listKind: ImageBuildList
    plural: imagebuilds
    singular: imagebuild
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ImageBuild is the Schema for the imagebuilds API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of ImageBuild
            properties:
              build:
                description: Settings that are passed to kaniko
                properties:
                  context:
                    description: Subpath to use as docker build context, defaults to the root of the provided git repo.
                    type: string
                  destination:
                    description: Destination Docker image registry url. e.g. docker.io/username/repo:tag
                    type: string
                  dockerfile:
                    description: Path to a Dockerfile, Defaults to "Dockerfile"
                    type: string
                required:
                - destination
                type: object
              git:
                description: This subsection contains all relavent options to pull a Dockerfile and a context from a git repo
                properties:
                  branch:
                    description: Git branch / tag to checkout
                    type: string
                  repo:
                    description: At this time only ssh git is supported e.g. git@github.com:user/repo.git
                    type: string
                  secret:
                    description: name of kubernetes secret to use when cloning the git repo, secret must be type:kubernetes.io/ssh-auth with data.ssh-privatekey
                    type: string
                required:
                - repo
                - branch
                type: object
            type: object
          status:
            description: Status defines the observed state of ImageBuild
            type: object
            x-kubernetes-preserve-unknown-fields: true
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: simple-image-builder-controller-manager
  namespace: simple-image-builder-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: simple-image-builder-leader-election-role
  namespace: simple-image-builder-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: simple-image-builder-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - build.k8s.tdawson.co.nz
  resources:
  - imagebuilds
  - imagebuilds/status
  - imagebuilds/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: simple-image-builder-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: simple-image-builder-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: simple-image-builder-leader-election-rolebinding
  namespace: simple-image-builder-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: simple-image-builder-leader-election-role
subjects:
- kind: ServiceAccount
  name: simple-image-builder-controller-manager
  namespace: simple-image-builder-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: simple-image-builder-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: simple-image-builder-manager-role
subjects:
- kind: ServiceAccount
  name: simple-image-builder-controller-manager
  namespace: simple-image-builder-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: simple-image-builder-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: simple-image-builder-proxy-role
subjects:
- kind: ServiceAccount
  name: simple-image-builder-controller-manager
  namespace: simple-image-builder-operator
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080

    leaderElection:
      leaderElect: true
      resourceName: 811c9dc5.k8s.tdawson.co.nz
kind: ConfigMap
metadata:
  name: simple-image-builder-manager-config
  namespace: simple-image-builder-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: simple-image-builder-controller-manager-metrics-service
  namespace: simple-image-builder-operator
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: simple-image-builder-controller-manager
  namespace: simple-image-builder-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --leader-election-id=simple-image-builder
        image: quay.io/tidawson/simple-image-builder:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 15
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
      securityContext:
        runAsNonRoot: true
      serviceAccountName: simple-image-builder-controller-manager
      terminationGracePeriodSeconds: 10
